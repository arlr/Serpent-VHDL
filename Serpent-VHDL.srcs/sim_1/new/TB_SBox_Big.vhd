----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 05.03.2020 08:48:56
-- Design Name: 
-- Module Name: TB_SBox_Big - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity TB_SBox_Big is
--  Port ( );
end TB_SBox_Big;

architecture Behavioral of TB_SBox_Big is

-- S_Box_Big0
component SBox_Big0 is
    Port ( 
    -- IN
    data_in : in std_logic_vector(127 downto 0);
    -- OUT
    data_out : out std_logic_vector(127 downto 0)
    );
end component;

-- S_Box_Big1
component SBox_Big1 is
    Port ( 
    -- IN
    data_in : in std_logic_vector(127 downto 0);
    -- OUT
    data_out  : out std_logic_vector(127 downto 0)
    );
end component;

-- S_Box_Big2
component SBox_Big2 is
    Port ( 
    -- IN
    data_in : in std_logic_vector(127 downto 0);
    -- OUT
    data_out  : out std_logic_vector(127 downto 0)
    );
end component;

-- S_Box_Big3
component SBox_Big3 is
    Port ( 
    -- IN
    data_in  : in std_logic_vector(127 downto 0);
    -- OUT
    data_out : out std_logic_vector(127 downto 0)
    );
end component;


-- S_Box_Big4
component SBox_Big4 is
    Port ( 
    -- IN
    data_in : in std_logic_vector(127 downto 0);
    -- OUT
    data_out : out std_logic_vector(127 downto 0)
    );
end component;

-- S_Box_Big5
component SBox_Big5 is
    Port ( 
    -- IN
    data_in : in std_logic_vector(127 downto 0);
    -- OUT
    data_out : out std_logic_vector(127 downto 0)
    );
end component;

-- S_Box_Big6
component SBox_Big6 is
    Port ( 
    -- IN
    data_in : in std_logic_vector(127 downto 0);
    -- OUT
    data_out : out std_logic_vector(127 downto 0)
    );
end component;

-- S_Box_Big7
component SBox_Big7 is
    Port ( 
    -- IN
    data_in : in std_logic_vector(127 downto 0);
    -- OUT
    data_out : out std_logic_vector(127 downto 0)
    );
end component;


signal data_in_0 : std_logic_vector(127 downto 0);
signal data_out_0 : std_logic_vector(127 downto 0);
signal data_in_1 : std_logic_vector(127 downto 0);
signal data_out_1 : std_logic_vector(127 downto 0);
signal data_in_2 : std_logic_vector(127 downto 0);
signal data_out_2 : std_logic_vector(127 downto 0);
signal data_in_3 : std_logic_vector(127 downto 0);
signal data_out_3 : std_logic_vector(127 downto 0);
signal data_in_4 : std_logic_vector(127 downto 0);
signal data_out_4 : std_logic_vector(127 downto 0);
signal data_in_5 : std_logic_vector(127 downto 0);
signal data_out_5 : std_logic_vector(127 downto 0);
signal data_in_6 : std_logic_vector(127 downto 0);
signal data_out_6 : std_logic_vector(127 downto 0);
signal data_in_7 : std_logic_vector(127 downto 0);
signal data_out_7 : std_logic_vector(127 downto 0);

begin

--------------------------- SBOX_0 --------------------------------------
SBOX_0 : SBox_Big0

port map (
    data_in => data_in_0,
    data_out => data_out_0);

process begin

    
    -- data_in == 246326271387508766486989807766798713687  
        data_in_0 <= "10111001010100001011011011010110110100101100111011010101111100110100010100001010011101101011111101001110100011011100001101010111";  
        wait for 10 ns;  
        assert data_out_0 = "00101101011000110010010100000101000011110111100100000110110000011010011000110100101101010010110010101001111000000111000101101011" report "Assertion violation. Test : 0" severity error;
        
        
        -- data_in == 10566158260063647538366400364223780479  
        data_in_0 <= "00000111111100101111011111010010101101110100001110101110010110100100000001010000110111010111100111010000101010011101011001111111";  
        wait for 10 ns;  
        assert data_out_0 = "00111011110011111100101100001111001010111010000101001001011001001010001101100011000000001011110100000011010011010000010110111100" report "Assertion violation. Test : 1" severity error;
        
        
        -- data_in == 338484101483992966987110854885203445128  
        data_in_0 <= "11111110101001011010101010101011001100010111111001111100011110111001010100110110000000000110011110001100011101110000010110001000";  
        wait for 10 ns;  
        assert data_out_0 = "11001001010001100100010001000010000110001011100110110111101100101101011000010101001100110101101111100111101110110011011011101110" report "Assertion violation. Test : 2" severity error;
        
        
        -- data_in == 199368579043466296200296029775803934892  
        data_in_0 <= "10010101111111001111110111011011110010100010100100101010110011011101001110000011100011100001000000110110110110110110100010101100";  
        wait for 10 ns;  
        assert data_out_0 = "11010110110001111100000000000010011101001111110111110100011100000000000111100001111010011000001100010101000000100101111001000111" report "Assertion violation. Test : 3" severity error;

end process;

--------------------------- SBOX_1 --------------------------------------
SBOX_1 : SBox_Big1

port map (
    data_in => data_in_1,
    data_out => data_out_1);

process begin
    
    -- data_in == 245804315421141243702471449264477727927  
        data_in_1 <= "10111000111011000011000001101100010100110101110100111101101000001100111001111011100010000001001011111101111010000110110010110111";  
        wait for 10 ns;  
        assert data_out_1 = "10000001001101100111111101010110000001110000110101111101111011110110001110101000000100011100001001001101001100010101011010001010" report "Assertion violation. Test : 0" severity error;
        
        
        -- data_in == 241662456427053025926073916643300136363  
        data_in_1 <= "10110101110011100111111100000010001010001101111100010100111010111101010110011101101101101110110100101001001111001101010110101011";  
        wait for 10 ns;  
        assert data_out_1 = "10000000011000111010010011110010001000011101010011001001001110001101000010111101100001010011110100101011011101101101000011101000" report "Assertion violation. Test : 1" severity error;
        
        
        -- data_in == 103207041943984501386806921433412105995  
        data_in_1 <= "01001101101001001111010000001000100001111010001100011110101110010010000000100011000110101010101101111100000101010111011100001011";  
        wait for 10 ns;  
        assert data_out_1 = "10011101111010010100100111110001000110101110011111000011100010110010111100100111110011101110100010100110110000001010101011111000" report "Assertion violation. Test : 2" severity error;
        
        
        -- data_in == 37877108632489888442714059634179047369  
        data_in_1 <= "00011100011111101101110110100011001111110110100010001110111011100100110111100000010101111010100111000010010101111111111111001001";  
        wait for 10 ns;  
        assert data_out_1 = "11000110101000111101110111100111011101000101000100010011001100111001110100111111000010101110101101100010000010100100010001101011" report "Assertion violation. Test : 3" severity error;



end process;

--------------------------- SBOX_2 --------------------------------------
SBOX_2 : SBox_Big2

port map (
    data_in => data_in_2,
    data_out => data_out_2);

process begin

    -- data_in == 248089254491069348308565407450417397579  
        data_in_2 <= "10111010101001000100000010011101111110011001001010110111001101000011000001111110110000010111011101111110010011001111111101001011";  
        wait for 10 ns;  
        assert data_out_2 = "01001110111000110011100000011011001000010001011101001111100100111001100011110101000001101111111111110101001100000010001000110100" report "Assertion violation. Test : 0" severity error;
        
        
        -- data_in == 168718477978534515589605015241334821751  
        data_in_2 <= "01111110111011011111111100110100010000000010001010110000111010001101011011011000110010001111000001110010011010011001001101110111";  
        wait for 10 ns;  
        assert data_out_2 = "11110101010110110010001010010011001110000111011101001000010111011011101010111101000011010010100011110111101000010001100111111111" report "Assertion violation. Test : 1" severity error;
        
        
        -- data_in == 207858337569904140487367585557804097515  
        data_in_2 <= "10011100011000000000111101000101010101000111111101010000000101100011000010101111001000100110100110100100001101100001111111101011";  
        wait for 10 ns;  
        assert data_out_2 = "00010000101010001000001000111100110000111111001011001000011010101001100011100010011101111010000111100011100110100110001001010100" report "Assertion violation. Test : 2" severity error;
        
        
        -- data_in == 117033093638743143377048317713355830390  
        data_in_2 <= "01011000000010111100000100000011000001001100111101100110011000000101011000001100000000101111100011100001100100101111010001110110";  
        wait for 10 ns;  
        assert data_out_2 = "11001101100001000000011010001001100000110000001010101010101010001100101010000000100001110010110101010110000101110010001111111010" report "Assertion violation. Test : 3" severity error;
    
end process;

--------------------------- SBOX_3 --------------------------------------
SBOX_3 : SBox_Big3

port map (
    data_in => data_in_3,
    data_out => data_out_3);

process begin

        -- data_in == 329584845873394516237298767959329840406  
        data_in_3 <= "11110111111100111011101101111101110011100001010110110001000000101000011100111001111101010000100100101010001100111001110100010110";  
        wait for 10 ns;  
        assert data_out_3 = "11100011111010000100010000110111101001011111100101001111000010111101001110000001111010010000000110110010100010000001011111110110" report "Assertion violation. Test : 0" severity error;
        
        
        -- data_in == 233301521437451681919474006828049256237  
        data_in_3 <= "10101111100001000011110100010110001111111101100010011001100101000000100100100101000101011010011011101001100110000100111100101101";  
        wait for 10 ns;  
        assert data_out_3 = "00101110110111001000011111110110100011100111110100010001000111000000000110111001111110010010011001010001000111011100111010110111" report "Assertion violation. Test : 1" severity error;
        
        
        -- data_in == 262414874079973056042157113135567235  
        data_in_3 <= "00000000001100101000101000001101010111001001110001111111011010111011001011101010001100000101101111001100001100111001000110000011";  
        wait for 10 ns;  
        assert data_out_3 = "00000000100010111101001000000111100110100001101000111110011001000100101101010010100000001001010010101010100010000001111111011000" report "Assertion violation. Test : 2" severity error;
        
        
        -- data_in == 284841873941942547308968509349803834658  
        data_in_3 <= "11010110010010101000110010101000010111001111000001010011111110000001000111110000010000111100010011010110111000111011110100100010";  
        wait for 10 ns;  
        assert data_out_3 = "01110110110000101101101000101101100110101110000010011000111011011111111111100000110010001010110001110110010110000100011110111011" report "Assertion violation. Test : 3" severity error;

        
        
end process;

--------------------------- SBOX_4 --------------------------------------
SBOX_4 : SBox_Big4

port map (
    data_in => data_in_4,
    data_out => data_out_4);

process begin

    -- data_in == 167894871668411182978962294091282703882  
        data_in_4 <= "01111110010011110110000001000111001001000001010001010101011110101101100110101110000011110010110100000101001001001110011000001010";  
        wait for 10 ns;  
        assert data_out_4 = "01100111110011011011000111000110100011001111110000000000011001001110010101000111000111011000111000010000100011000111101100010100" report "Assertion violation. Test : 0" severity error;
        
        
        -- data_in == 148604530369179199574116511986530625961  
        data_in_4 <= "01101111110011000011000100000101100011010011010010100111011101100010101001011111000111000110110010101100110100111010100110101001";  
        wait for 10 ns;  
        assert data_out_4 = "10111101100110010011111100010000001011100011110001000110011010111000010000001101111110011011100101001001111000110100010101000101" report "Assertion violation. Test : 1" severity error;
        
        
        -- data_in == 200803632239037544495416546283911477281  
        data_in_4 <= "10010111000100010101111101110001100110001001011111111000111000010110101010100101111011101101111000000000011010010111100000100001";  
        wait for 10 ns;  
        assert data_out_4 = "01010110111111110000110101101111010100100101011011010010011111111011010001000000011101111110011100010001101101010110001010001111" report "Assertion violation. Test : 2" severity error;
        
        
        -- data_in == 134991635360557268792659900341910820553  
        data_in_4 <= "01100101100011100111000101111010101011110100100010110110011001011101011111000110100111111010000010010100101000001101011011001001";  
        wait for 10 ns;  
        assert data_out_4 = "10110000001001110110111101100100010011011100001010101011101100001110011010011011010111010100000101011100010000011110101110010101" report "Assertion violation. Test : 3" severity error;
        
        
end process;

--------------------------- SBOX_5 --------------------------------------
SBOX_5 : SBox_Big5

port map (
    data_in => data_in_5,
    data_out => data_out_5);

process begin

    -- data_in == 119638338353040172191219379481270786520  
        data_in_5 <= "01011010000000011000000101111110010001101110111000100111010111100000100001101111010000010011011011011011010000111001100111011000";  
        wait for 10 ns;  
        assert data_out_5 = "10101110111101010000010111000111010010010111011100101100101001111111000010010001010001011011100101101000010010110011001101100000" report "Assertion violation. Test : 0" severity error;
        
        
        -- data_in == 24452329466141387467366229291190073181  
        data_in_5 <= "00010010011001010101100011101100000111100110011101000111111101000111000100010101110011100110011110111100000001100011011101011101";  
        wait for 10 ns;  
        assert data_out_5 = "01010010100110101010000001111101010101111001110001001100000101001100010101011010110101111001110010001101111110011011110010100110" report "Assertion violation. Test : 1" severity error;
        
        
        -- data_in == 58826273359435790231192396974352813772  
        data_in_5 <= "00101100010000011000011100110100000011001011010111110011001110101100010001001100001100001010010010011000001001001100111011001100";  
        wait for 10 ns;  
        assert data_out_5 = "00101101010001010000110010110100111111011000101000011011101111101101010001001101101111111110010000110000001001001101011111011101" report "Assertion violation. Test : 2" severity error;
        
        
        -- data_in == 23885645849003497296788283941923402176  
        data_in_5 <= "00010001111110000011010101000011010011001011101101100101010010101010111000001010010011001110101111011111101111010011000111000000";  
        wait for 10 ns;  
        assert data_out_5 = "01010101000100001011101001001011010011011000100010011010010011101110011111111110010011010111100001100001100001101011010111011111" report "Assertion violation. Test : 3" severity error;
        
        
        
end process;

--------------------------- SBOX_6 --------------------------------------
SBOX_6 : SBox_Big6

port map (
    data_in => data_in_6,
    data_out => data_out_6);

process begin

    -- data_in == 160509306316091950975746872260478357842  
        data_in_6 <= "01111000110000001111011111001010110101001001111001111110011100011100011011111011000100010110100011101001000000111101000101010010";  
        wait for 10 ns;  
        assert data_out_6 = "10111110110101110000101111010001001110001001101010111010101100101101011000001111001000100110111010101001011101010011001001001100" report "Assertion violation. Test : 0" severity error;
        
        
        -- data_in == 160754377115220075529558680894155203960  
        data_in_6 <= "01111000111100000010101010110111001100001000110000100111111011110010001010000101111010101000010000100001011011110010010101111000";  
        wait for 10 ns;  
        assert data_out_6 = "10111110000001111100000111111011010101111110110111001011101000001100110011100100101000011110100011000010011000001100010010111110" report "Assertion violation. Test : 1" severity error;
        
        
        -- data_in == 203150383324677061116505838962847853199  
        data_in_6 <= "10011000110101010101011100110100100100010110100011000000000100001100011011011110111100111110101101011000100010010010101010001111";  
        wait for 10 ns;  
        assert data_out_6 = "10011110001101000100101101011000100100100110111011010111001001111101011000111010000001011010111101001110111010011100000111100000" report "Assertion violation. Test : 2" severity error;
        
        
        -- data_in == 194195352390422718205185234350105625354  
        data_in_6 <= "10010010000110001010101000010111100111110110110011101110011000100100010100010000111101011101001100111100000100110000001100001010";  
        wait for 10 ns;  
        assert data_out_6 = "10011100001011100001000100101011100100000110110110101010011011001000010000100111000001000011010101011101001001010111010101110001" report "Assertion violation. Test : 3" severity error;
        
        
end process;

--------------------------- SBOX_7 --------------------------------------
SBOX_7 : SBox_Big7

port map (
    data_in => data_in_7,
    data_out => data_out_7);

process begin

    -- data_in == 78115092287262900189483155282625438284  
        data_in_7 <= "00111010110001000110101101100110100111000100011001101001110101110111000011110011101011010111100010001101100100100010001001001100";  
        wait for 10 ns;  
        assert data_out_7 = "00001100100111100010101000100010010010011110001000100100001110111011000101100000110000111011011101110011010011111111111111101001" report "Assertion violation. Test : 0" severity error;
        
        
        -- data_in == 82273457994123653932767667361737357875  
        data_in_7 <= "00111101111001010100101010101000110010000101001011111110111000100110001101000110110101111100101110100011001101000011101000110011";  
        wait for 10 ns;  
        assert data_out_7 = "00000011010110001110110011000111100101111000111101100101010111110010000011100010001110111001101011000000000011100000110000000000" report "Assertion violation. Test : 1" severity error;
        
        
        -- data_in == 32398512717161336541824523351905973718  
        data_in_7 <= "00011000010111111011101000000001000111100011010010010010010010001001111111111000110001010000111110110100101100101011010111010110";  
        wait for 10 ns;  
        assert data_out_7 = "11010111100001101010110000011101110101010000111001001111111001110100011001100111100110000001011010101110101011111010100000110010" report "Assertion violation. Test : 2" severity error;
        
        
        -- data_in == 27672419959812407778166790900778036773  
        data_in_7 <= "00010100110100011000001110100100001001010111111001000001110001101100101011001011101000000011101011110010111011000110111000100101";  
        wait for 10 ns;  
        assert data_out_7 = "11011110001111010111000011001110111110001011010111101101100100101001110010011010110000010000110001101111010110010010010111111000" report "Assertion violation. Test : 3" severity error;
        
        
end process;


end Behavioral;
